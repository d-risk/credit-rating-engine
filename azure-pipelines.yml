pool:
  vmImage: ubuntu-16.04

variables:
  - group: 'AWS Credentials'
  - name: pythonVersion
    value: '3.7.2'
  - name: imageName
    value: 'drisk/mock-api-gateway'
  - name: latestImage
    value: '$(imageName):latest'
  - name: versionedImage
    value: '$(imageName):$(Build.BuildId)'
  - name: awsRegion
    value: '268927183565.dkr.ecr.ap-southeast-1.amazonaws.com'

pr:
  - master

steps:
  - task: UsePythonVersion@0
    inputs:
      architecture: x64
      versionSpec: $(pythonVersion)

  - bash: |
      python -m venv .venv
      source .venv/bin/activate
      python -m pip install --upgrade pip setuptools
      pip install -r requirements.freeze.txt
      pip install --upgrade unittest-xml-reporting
    displayName: 'Setup virtual environment'

  - bash: |
      source .venv/bin/activate
      python manage.py migrate
      python manage.py test --testrunner xmlrunner.extra.djangotestrunner.XMLTestRunner --no-input
    displayName: 'Run tests for Python $(pythonVersion)'

  - task: PublishTestResults@2
    inputs:
      testRunTitle: 'Test results for Python $(pythonVersion)'
      testResultsFiles: '**/TEST-*.xml'
    condition: succeededOrFailed()

  - bash: docker build . --tag $(latestImage) --tag $(versionedImage) --tag $(awsRegion)/$(latestImage) --tag $(awsRegion)/$(versionedImage)
    displayName: 'Build Docker image'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - bash: |
      pip install --upgrade awscli
      $(aws ecr get-login --no-include-email)
      aws ecr create-repository --repository-name $(imageName)
      docker push $(awsRegion)/$(imageName)
    displayName: 'Push Docker image to AWS ECR repository'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    env:
      AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
      AWS_DEFAULT_REGION: $(AWS_DEFAULT_REGION)
      AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
